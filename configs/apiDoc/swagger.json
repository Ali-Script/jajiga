{
    "openapi": "3.0.1",
    "info": {
        "title": "Power By Ali-Script",
        "version": "1.2.7"
    },
    "tags": [
        {
            "name": "Only Admin Access"
        },
        {
            "name": "Authentication"
        },
        {
            "name": "Login"
        },
        {
            "name": "Users"
        },
        {
            "name": "Villas"
        },
        {
            "name": "Categories"
        },
        {
            "name": "Utils"
        },
        {
            "name": "Comments"
        }
    ],
    "paths": {
        "/admin-panel": {
            "get": {
                "tags": [
                    "Only Admin Access"
                ],
                "summary": "Get Panel Info",
                "parameters": [
                    {
                        "name": "Authorization Token",
                        "in": "header",
                        "required": "true"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succ"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/ban-user/{phone}": {
            "post": {
                "tags": [
                    "Only Admin Access"
                ],
                "summary": "Ban User",
                "parameters": [
                    {
                        "name": "Authorization Token",
                        "in": "header",
                        "required": "true"
                    }
                ],
                "description": "######### you can send only one of the body fields to back-end #########",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "example": [
                                    {
                                        "violation of Terms of Service:": "Users who break the websiteâ€™s rules and guidelines."
                                    },
                                    {
                                        "spamming:": "Posting unsolicited or irrelevant messages repeatedly."
                                    },
                                    {
                                        "harassment or Abuse:": "Engaging in threatening, abusive, or harmful behavior towards other users."
                                    },
                                    {
                                        "illegal Activities:": "Participating in activities that are against the law."
                                    },
                                    {
                                        "hacking or Security Breaches:": "Attempting to gain unauthorized access to the website or its data."
                                    },
                                    {
                                        "inappropriate Content:": "Sharing offensive, explicit, or inappropriate material."
                                    },
                                    {
                                        "impersonation:": "Pretending to be someone else without permission."
                                    },
                                    {
                                        "fraudulent Activities:": "Engaging in scams, phishing, or other deceptive practices."
                                    },
                                    {
                                        "multiple Account Abuse:": "Creating multiple accounts to exploit the system or evade bans."
                                    },
                                    {
                                        "copyright Infringement:": "Sharing or distributing copyrighted material without permission."
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Succ"
                    },
                    "402": {
                        "description": "you can not ban admin"
                    },
                    "404": {
                        "description": "no user found"
                    },
                    "409": {
                        "description": "Validator Error"
                    },
                    "422": {
                        "description": "This user already has banned"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/ban-user/unban/{phone}": {
            "delete": {
                "tags": [
                    "Only Admin Access"
                ],
                "summary": "Unban User",
                "parameters": [
                    {
                        "name": "Authorization Token",
                        "in": "header",
                        "required": "true"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succ"
                    },
                    "404": {
                        "description": "no user found"
                    },
                    "422": {
                        "description": "this user has not been banned"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/ban-user/getAll": {
            "get": {
                "tags": [
                    "Only Admin Access"
                ],
                "summary": "Get All Banned Users",
                "parameters": [
                    {
                        "name": "Authorization Token",
                        "in": "header",
                        "required": "true"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succ"
                    },
                    "404": {
                        "description": "no user has banned yet"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Home Page | (Auth Middleware)",
                "parameters": [
                    {
                        "name": "Authorization Token",
                        "in": "header",
                        "required": "true"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "example": {
                                    "No Body Set": ""
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Succ"
                    },
                    "403": {
                        "description": "Sorry u has banned from this website"
                    },
                    "404": {
                        "description": "User Not Found ! | Undefined Cookie"
                    },
                    "440": {
                        "description": "Please login no user found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Check If User Already Exists Redirect To Login If Not Redirect To Register",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "example": {
                                    "phone": "Phone Number Format"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Succ"
                    },
                    "403": {
                        "description": "Sorry u has banned from this website"
                    },
                    "409": {
                        "description": "Phone number is required"
                    },
                    "410": {
                        "description": "Phone Number format is wrong"
                    },
                    "411": {
                        "description": "User Already Exists redirect to login page"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout",
                "responses": {
                    "200": {
                        "description": "Succ"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/auth/sendCode": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Enter Your Phone Number To Send Code",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "example": {
                                    "phone": "phone number",
                                    "firstName": "firstName",
                                    "lastName": "lastName",
                                    "password": "min 8 character at least one lowercase letter and one uppercase letter, at least one number and accept special characters . - _ @ $ #",
                                    "confirmPassword": "min 8 character at least one lowercase letter and one uppercase letter, at least one number and accept special characters . - _ @ $ #"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Succ"
                    },
                    "409": {
                        "description": "Validator Error"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/auth/confirmCode": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Confirm Sended Code And Create User",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "example": {
                                    "code": "otp code",
                                    "phone": "phone number",
                                    "firstName": "firstName",
                                    "lastName": "lastName",
                                    "password": "^[a-zA-Z0-9]{8,999}$",
                                    "confirmPassword": "^[a-zA-Z0-9]{8,999}$"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Succ"
                    },
                    "400": {
                        "description": "Invalid Code !"
                    },
                    "409": {
                        "description": "Validator Error"
                    },
                    "404": {
                        "description": "no otp code found for this number"
                    },
                    "405": {
                        "description": "Code has Used before!"
                    },
                    "406": {
                        "description": "User already exists"
                    },
                    "422": {
                        "description": "Code Has Expired !"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/loginByPassword/{phone}": {
            "post": {
                "tags": [
                    "Login"
                ],
                "parameters": [
                    {
                        "name": "phone",
                        "in": "path",
                        "required": "true"
                    }
                ],
                "summary": "Login By Password",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "example": {
                                    "password": "^[a-zA-Z0-9]{8,999}$"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Succ"
                    },
                    "400": {
                        "description": "Phone is Incrract !!"
                    },
                    "403": {
                        "description": "Sorry u has banned from this website"
                    },
                    "401": {
                        "description": "Password is Incrract !!"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/loginByCode/{phone}": {
            "post": {
                "tags": [
                    "Login"
                ],
                "parameters": [
                    {
                        "name": "phone",
                        "in": "path",
                        "required": "true"
                    }
                ],
                "summary": "Login By Otp Code",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "example": {
                                    "code": "1111"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Succ"
                    },
                    "400": {
                        "description": "Invalid Code !"
                    },
                    "403": {
                        "description": "Sorry u has banned from this website"
                    },
                    "404": {
                        "description": "no user found"
                    },
                    "405": {
                        "description": "Code has Used before!"
                    },
                    "408": {
                        "description": "There is no Code for this number"
                    },
                    "422": {
                        "description": "Code Has Expired "
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/getMe": {
            "get": {
                "tags": [
                    "Utils"
                ],
                "summary": "GetMe",
                "parameters": [
                    {
                        "name": "Authorization Token",
                        "in": "header",
                        "required": "true"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succ"
                    },
                    "440": {
                        "description": "Please login no user found !!"
                    },
                    "403": {
                        "description": "Sorry u has banned from this website"
                    },
                    "404": {
                        "description": "User Not Found !"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/resendCode/{phone}": {
            "post": {
                "tags": [
                    "Utils"
                ],
                "parameters": [
                    {
                        "name": "phone",
                        "in": "path",
                        "required": "true"
                    }
                ],
                "summary": "Resend Otp Code",
                "responses": {
                    "200": {
                        "description": "Succ"
                    },
                    "404": {
                        "description": "no user found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/villa/add": {
            "post": {
                "tags": [
                    "Villas"
                ],
                "parameters": [
                    {
                        "name": "Authorization Token",
                        "in": "header",
                        "required": "true"
                    }
                ],
                "summary": "Add New Villa",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "example": {
                                    "title": "string",
                                    "address": {
                                        "state": "string",
                                        "city": "string",
                                        "address": "string"
                                    },
                                    "coordinates": {
                                        "x": "string",
                                        "y": "string"
                                    },
                                    "cover": [
                                        "string",
                                        "string"
                                    ],
                                    "aboutVilla": {
                                        "villaSpace": [
                                            "privetRoom",
                                            "lockedRoom",
                                            "semiClosedRoom",
                                            "commonRoom"
                                        ],
                                        "villaType": "ObjectId",
                                        "villaZone": [
                                            "littoral",
                                            "silvan",
                                            "summerVilla",
                                            "desertHouse",
                                            "townHouse",
                                            "suburbanHouse",
                                            "cottage"
                                        ],
                                        "aboutVilla": "string"
                                    },
                                    "capacity": {
                                        "normalCapacity": "number",
                                        "maxCapacity": "number",
                                        "buildingSize": "number",
                                        "fuundationSize": "number",
                                        "bedRoom": "number",
                                        "description": "string"
                                    },
                                    "facility": {
                                        "facility": {
                                            "furniture": {
                                                "status": "boolean",
                                                "description": "string"
                                            },
                                            "fridge": {
                                                "status": "boolean",
                                                "description": "string"
                                            },
                                            "tv": {
                                                "status": "boolean",
                                                "description": "string"
                                            },
                                            "diningTable": {
                                                "status": "boolean",
                                                "description": "string"
                                            },
                                            "heatingSystem": {
                                                "status": "boolean",
                                                "description": "string"
                                            },
                                            "coolingSystem": {
                                                "status": "boolean",
                                                "description": "string"
                                            },
                                            "parking": {
                                                "status": "boolean",
                                                "description": "string"
                                            },
                                            "eightball": {
                                                "status": "boolean",
                                                "description": "string"
                                            },
                                            "wifi": {
                                                "status": "boolean",
                                                "description": "string"
                                            },
                                            "toilet": {
                                                "status": "boolean",
                                                "description": "string"
                                            },
                                            "pool": {
                                                "status": "boolean",
                                                "description": "string"
                                            },
                                            "moreFacility": "string"
                                        },
                                        "sanitaryFacilities": {
                                            "changeThePillow": {
                                                "status": "boolean"
                                            },
                                            "changeTheBedsheet": {
                                                "status": "boolean"
                                            },
                                            "chargingToiletPaper": {
                                                "status": "boolean"
                                            },
                                            "dishSoap": {
                                                "status": "boolean"
                                            },
                                            "chargingDishSoap": {
                                                "status": "boolean"
                                            },
                                            "antiseptics": {
                                                "status": "boolean"
                                            },
                                            "moreSanitaryFacilities": "string"
                                        }
                                    },
                                    "price": {
                                        "newYear": "number",
                                        "spring": {
                                            "midWeek": "number",
                                            "holidays": "number",
                                            "peakDays": "number"
                                        },
                                        "summer": {
                                            "midWeek": "number",
                                            "holidays": "number",
                                            "peakDays": "number"
                                        },
                                        "autumn": {
                                            "midWeek": "number",
                                            "holidays": "number",
                                            "peakDays": "number"
                                        },
                                        "winter": {
                                            "midWeek": "number",
                                            "holidays": "number",
                                            "peakDays": "number"
                                        }
                                    },
                                    "rules": {
                                        "pet": "boolean",
                                        "music": "boolean",
                                        "smoke": "boolean",
                                        "more": "string"
                                    },
                                    "step": "number",
                                    "finished": "boolean"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "409": {
                        "description": "Validator Error"
                    },
                    "406": {
                        "description": "The minimum number of photos is 3"
                    },
                    "422": {
                        "description": "this location is already exist"
                    },
                    "200": {
                        "description": "Succ !"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/villa/update/{villaID}": {
            "put": {
                "tags": [
                    "Villas"
                ],
                "parameters": [
                    {
                        "name": "Authorization Token",
                        "in": "header",
                        "required": "true"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": "true"
                    }
                ],
                "summary": "Update Villa",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "example": {
                                    "title": "string",
                                    "address": {
                                        "state": "string",
                                        "city": "string",
                                        "address": "string"
                                    },
                                    "coordinates": {
                                        "x": "string",
                                        "y": "string"
                                    },
                                    "cover": [
                                        "string",
                                        "string"
                                    ],
                                    "aboutVilla": {
                                        "villaSpace": [
                                            "privetRoom",
                                            "lockedRoom",
                                            "semiClosedRoom",
                                            "commonRoom"
                                        ],
                                        "villaType": "ObjectId",
                                        "villaZone": [
                                            "littoral",
                                            "silvan",
                                            "summerVilla",
                                            "desertHouse",
                                            "townHouse",
                                            "suburbanHouse",
                                            "cottage"
                                        ],
                                        "aboutVilla": "string"
                                    },
                                    "capacity": {
                                        "normalCapacity": "number",
                                        "maxCapacity": "number",
                                        "buildingSize": "number",
                                        "fuundationSize": "number",
                                        "bedRoom": "number",
                                        "description": "string"
                                    },
                                    "facility": {
                                        "facility": {
                                            "furniture": {
                                                "status": "boolean",
                                                "description": "string"
                                            },
                                            "fridge": {
                                                "status": "boolean",
                                                "description": "string"
                                            },
                                            "tv": {
                                                "status": "boolean",
                                                "description": "string"
                                            },
                                            "diningTable": {
                                                "status": "boolean",
                                                "description": "string"
                                            },
                                            "heatingSystem": {
                                                "status": "boolean",
                                                "description": "string"
                                            },
                                            "coolingSystem": {
                                                "status": "boolean",
                                                "description": "string"
                                            },
                                            "parking": {
                                                "status": "boolean",
                                                "description": "string"
                                            },
                                            "eightball": {
                                                "status": "boolean",
                                                "description": "string"
                                            },
                                            "wifi": {
                                                "status": "boolean",
                                                "description": "string"
                                            },
                                            "toilet": {
                                                "status": "boolean",
                                                "description": "string"
                                            },
                                            "pool": {
                                                "status": "boolean",
                                                "description": "string"
                                            },
                                            "moreFacility": "string"
                                        },
                                        "sanitaryFacilities": {
                                            "changeThePillow": {
                                                "status": "boolean"
                                            },
                                            "changeTheBedsheet": {
                                                "status": "boolean"
                                            },
                                            "chargingToiletPaper": {
                                                "status": "boolean"
                                            },
                                            "dishSoap": {
                                                "status": "boolean"
                                            },
                                            "chargingDishSoap": {
                                                "status": "boolean"
                                            },
                                            "antiseptics": {
                                                "status": "boolean"
                                            },
                                            "moreSanitaryFacilities": "string"
                                        }
                                    },
                                    "price": {
                                        "newYear": "number",
                                        "spring": {
                                            "midWeek": "number",
                                            "holidays": "number",
                                            "peakDays": "number"
                                        },
                                        "summer": {
                                            "midWeek": "number",
                                            "holidays": "number",
                                            "peakDays": "number"
                                        },
                                        "autumn": {
                                            "midWeek": "number",
                                            "holidays": "number",
                                            "peakDays": "number"
                                        },
                                        "winter": {
                                            "midWeek": "number",
                                            "holidays": "number",
                                            "peakDays": "number"
                                        }
                                    },
                                    "rules": {
                                        "pet": "boolean",
                                        "music": "boolean",
                                        "smoke": "boolean",
                                        "more": "string"
                                    },
                                    "step": "number",
                                    "finished": "boolean"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Succ !"
                    },
                    "400": {
                        "description": "Invalid Object Id"
                    },
                    "401": {
                        "description": "no villa found with this id"
                    },
                    "402": {
                        "description": "you are not the owner of this villa"
                    },
                    "406": {
                        "description": "The minimum number of photos is 3"
                    },
                    "409": {
                        "description": "Validator Error"
                    },
                    "422": {
                        "description": "this location is already exist"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/villa/getAll": {
            "get": {
                "tags": [
                    "Villas"
                ],
                "summary": "Get All Villas",
                "responses": {
                    "200": {
                        "description": "Succ"
                    },
                    "404": {
                        "description": "no villa found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/villa/getAllActivated": {
            "get": {
                "tags": [
                    "Villas"
                ],
                "summary": "Get All Activated Villas",
                "responses": {
                    "200": {
                        "description": "Succ"
                    },
                    "404": {
                        "description": "no villa found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/villa/myVillas": {
            "get": {
                "tags": [
                    "Villas"
                ],
                "parameters": [
                    {
                        "name": "Authorization Token",
                        "in": "header",
                        "required": "true"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": "true"
                    }
                ],
                "summary": "Return Villas That User Created",
                "responses": {
                    "200": {
                        "description": "Succ"
                    },
                    "404": {
                        "description": "no villa found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/villa/get/{villaID}": {
            "get": {
                "tags": [
                    "Villas"
                ],
                "parameters": [
                    {
                        "name": "Authorization Token",
                        "in": "header",
                        "required": "true"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": "true"
                    }
                ],
                "summary": "Get One Villa",
                "responses": {
                    "200": {
                        "description": "Succ"
                    },
                    "404": {
                        "description": "no villa found"
                    },
                    "400": {
                        "description": "Invalid Object Id"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/villa/facility": {
            "get": {
                "tags": [
                    "Utils"
                ],
                "parameters": [
                    {
                        "name": "Authorization Token",
                        "in": "header",
                        "required": "true"
                    }
                ],
                "summary": "Get Facility",
                "responses": {
                    "200": {
                        "description": "Succ"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/villa/delete/{villaID}": {
            "delete": {
                "tags": [
                    "Villas"
                ],
                "parameters": [
                    {
                        "name": "Authorization Token",
                        "in": "header",
                        "required": "true"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": "true"
                    }
                ],
                "summary": "Delete Villa",
                "responses": {
                    "200": {
                        "description": "Succ"
                    },
                    "400": {
                        "description": "Invalid Object Id"
                    },
                    "404": {
                        "description": "no villa found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/villa/s": {
            "get": {
                "tags": [
                    "Villas"
                ],
                "parameters": [
                    {
                        "name": "Authorization Token",
                        "in": "header",
                        "required": "true"
                    }
                ],
                "summary": "Filtring Villas",
                "responses": {
                    "200": {
                        "description": "Succ"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/villa/privilegedVillas": {
            "get": {
                "tags": [
                    "Villas"
                ],
                "summary": "PrivilegedVillas",
                "responses": {
                    "200": {
                        "description": "Succ"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/villa/popularTowns": {
            "get": {
                "tags": [
                    "Villas"
                ],
                "summary": "Array Of PopularTowns",
                "responses": {
                    "200": {
                        "description": "Succ"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/villa/quickSearchByZone": {
            "get": {
                "tags": [
                    "Villas"
                ],
                "summary": "Sorted List Of Villas Sort By VillaZone",
                "responses": {
                    "200": {
                        "description": "Succ"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/villa/book/price/{villaID}": {
            "post": {
                "tags": [
                    "Villas"
                ],
                "parameters": [
                    {
                        "name": "villaID",
                        "in": "path",
                        "required": "true"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "example": {
                                    "date": {
                                        "from": "1403/5/27",
                                        "to": "1403/5/29"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Price Of Booking",
                "responses": {
                    "200": {
                        "description": "Succ"
                    },
                    "402": {
                        "description": "date>to  should greater than date>from"
                    },
                    "404": {
                        "description": "Villa not found 404 !"
                    },
                    "409": {
                        "description": "validator error"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/villa/book/{villaID}": {
            "post": {
                "tags": [
                    "Villas"
                ],
                "parameters": [
                    {
                        "name": "Authorization Token",
                        "in": "header",
                        "required": "true"
                    },
                    {
                        "name": "villaID",
                        "in": "path",
                        "required": "true"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "example": {
                                    "date": {
                                        "from": "1403/5/27",
                                        "to": "1403/5/29"
                                    },
                                    "geustNumber": "number of the geusts"
                                }
                            }
                        }
                    }
                },
                "summary": "Book Villa",
                "responses": {
                    "200": {
                        "description": "Succ"
                    },
                    "400": {
                        "description": "guestNumber is bigger than maxCapacity"
                    },
                    "402": {
                        "description": "date>to  should greater than date>from"
                    },
                    "404": {
                        "description": "Villa not found 404 !"
                    },
                    "409": {
                        "description": "validator error"
                    },
                    "419": {
                        "description": "date.from should be greater than realtime date"
                    },
                    "422": {
                        "description": "Villa is already booked"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/villa/accessVisit/{key}/{villaID}": {
            "put": {
                "tags": [
                    "Only Admin Access"
                ],
                "parameters": [
                    {
                        "name": "Authorization Token",
                        "in": "header",
                        "required": "true"
                    },
                    {
                        "name": "villaID",
                        "in": "path",
                        "required": "true"
                    },
                    {
                        "name": "key",
                        "in": "path",
                        "required": "true"
                    }
                ],
                "summary": "Accept Or Reject Villa",
                "responses": {
                    "200": {
                        "description": "Succ"
                    },
                    "400": {
                        "description": "Invalid key. Only 'accept' or 'reject' is allowed."
                    },
                    "401": {
                        "description": "Invalid Object Id"
                    },
                    "404": {
                        "description": "Villa not found 404 !"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/villa/getAllBooks": {
            "get": {
                "tags": [
                    "Only Admin Access"
                ],
                "parameters": [
                    {
                        "name": "Authorization Token",
                        "in": "header",
                        "required": "true"
                    }
                ],
                "summary": "getAll Books",
                "responses": {
                    "200": {
                        "description": "Succ"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/category/add": {
            "post": {
                "tags": [
                    "Only Admin Access"
                ],
                "parameters": [
                    {
                        "name": "Authorization Token",
                        "in": "header",
                        "required": "true"
                    }
                ],
                "summary": "Add New Category",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "example": {
                                    "title": "string",
                                    "href": "string"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Succ"
                    },
                    "409": {
                        "description": "validator error"
                    },
                    "422": {
                        "description": "Duplicated Data"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/category/geAll": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "parameters": [
                    {
                        "name": "Authorization Token",
                        "in": "header",
                        "required": "true"
                    }
                ],
                "summary": "Get All Categories",
                "responses": {
                    "200": {
                        "description": "Succ"
                    },
                    "404": {
                        "description": "no category found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/category/remove/{id}": {
            "delete": {
                "tags": [
                    "Only Admin Access"
                ],
                "parameters": [
                    {
                        "name": "Authorization Token",
                        "in": "header",
                        "required": "true"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": "true"
                    }
                ],
                "summary": "Delete One Category",
                "responses": {
                    "200": {
                        "description": "Succ"
                    },
                    "404": {
                        "description": "no category found"
                    },
                    "422": {
                        "description": "Invalid Object ID"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/getAll": {
            "get": {
                "tags": [
                    "Only Admin Access"
                ],
                "parameters": [
                    {
                        "name": "Authorization Token",
                        "in": "header",
                        "required": "true"
                    }
                ],
                "summary": "Get All Users",
                "responses": {
                    "200": {
                        "description": "Succ"
                    },
                    "404": {
                        "description": "no user found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/get/{phone}": {
            "get": {
                "tags": [
                    "Only Admin Access"
                ],
                "parameters": [
                    {
                        "name": "Authorization Token",
                        "in": "header",
                        "required": "true"
                    },
                    {
                        "name": "phone",
                        "in": "path",
                        "required": "true"
                    }
                ],
                "summary": "Get User By Phone Number",
                "responses": {
                    "200": {
                        "description": "Succ"
                    },
                    "404": {
                        "description": "no user found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/remove/{phone}": {
            "delete": {
                "tags": [
                    "Only Admin Access"
                ],
                "parameters": [
                    {
                        "name": "Authorization Token",
                        "in": "header",
                        "required": "true"
                    },
                    {
                        "name": "phone",
                        "in": "path",
                        "required": "true"
                    }
                ],
                "summary": "Remove One User By Phone Number",
                "responses": {
                    "200": {
                        "description": "Succ"
                    },
                    "404": {
                        "description": "no user found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/changeRole/{key}/{phone}": {
            "post": {
                "tags": [
                    "Only Admin Access"
                ],
                "parameters": [
                    {
                        "name": "Authorization Token",
                        "in": "header",
                        "required": "true"
                    },
                    {
                        "name": "phone",
                        "in": "path",
                        "required": "true"
                    },
                    {
                        "name": "key",
                        "in": "path",
                        "required": "true"
                    }
                ],
                "summary": "Change User Role (Only 'promotion' Or 'demotion' Is Allowed In Key Parameter.)",
                "responses": {
                    "200": {
                        "description": "Succ"
                    },
                    "400": {
                        "description": "Invalid key. Only 'promotion' or 'demotion' is allowed."
                    },
                    "401": {
                        "description": "unknown error"
                    },
                    "404": {
                        "description": "no user found"
                    },
                    "422": {
                        "description": "this user is already NormalUser"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/changePassword": {
            "put": {
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "name": "Authorization Token",
                        "in": "header",
                        "required": "true"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "example": {
                                    "currentPassword": "ÙŽmin 8 character at least one lowercase letter and one uppercase letter, at least one number and accept special character . - _ @ $ #",
                                    "newPassword": "ÙŽmin 8 character at least one lowercase letter and one uppercase letter, at least one number and accept special character . - _ @ $ #"
                                }
                            }
                        }
                    }
                },
                "summary": "Change Password",
                "responses": {
                    "200": {
                        "description": "Succ"
                    },
                    "401": {
                        "description": "Password is Incrract"
                    },
                    "402": {
                        "description": "You cannot reset your last password to a new password"
                    },
                    "406": {
                        "description": "The password must contain 8 characters or more and contain at least one number and one capital letter"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/forgotPassword": {
            "post": {
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "name": "Authorization Token",
                        "in": "header",
                        "required": "true"
                    }
                ],
                "summary": "Send Code To Change The Password",
                "responses": {
                    "200": {
                        "description": "Succ"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/forgotPasswordCode": {
            "put": {
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "name": "Authorization Token",
                        "in": "header",
                        "required": "true"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "example": {
                                    "code": "ÙŽ1111",
                                    "password": "ÙŽmin 8 character at least one lowercase letter and one uppercase letter, at least one number and accept special character . - _ @ $ #",
                                    "confirmPassword": "ÙŽmin 8 character at least one lowercase letter and one uppercase letter, at least one number and accept special character . - _ @ $ #"
                                }
                            }
                        }
                    }
                },
                "summary": "Confirm Code And Change The Password",
                "responses": {
                    "200": {
                        "description": "Succ"
                    },
                    "400": {
                        "description": "Invalid Code !"
                    },
                    "402": {
                        "description": "You cannot reset your last password to a new password"
                    },
                    "404": {
                        "description": "no otp code found for this number"
                    },
                    "405": {
                        "description": "Code has Used before!"
                    },
                    "406": {
                        "description": "min 8 character at least one lowercase letter and one uppercase letter, at least one number and accept special character . - _ @ $ #"
                    },
                    "416": {
                        "description": "password and confirmPassword are not same"
                    },
                    "422": {
                        "description": "Code Has Expired !"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/edit": {
            "put": {
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "name": "Authorization Token",
                        "in": "header",
                        "required": "true"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "example": {
                                    "firstName": "firstName",
                                    "lastName": "lastName",
                                    "avatar": "file",
                                    "gender": "male or female",
                                    "aboutMe": "string"
                                }
                            }
                        }
                    }
                },
                "summary": "Edit User",
                "responses": {
                    "200": {
                        "description": "Succ"
                    },
                    "400": {
                        "description": "Invalid gendet. Only 'male' or 'female' is allowed."
                    },
                    "406": {
                        "description": "number is not allowed in name"
                    },
                    "421": {
                        "description": "You cannot reset your last name to a new name"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/addEmail": {
            "post": {
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "name": "Authorization Token",
                        "in": "header",
                        "required": "true"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "example": {
                                    "email": "email format"
                                }
                            }
                        }
                    }
                },
                "summary": "Send Code To Email",
                "responses": {
                    "200": {
                        "description": "Succ"
                    },
                    "400": {
                        "description": "unknown err"
                    },
                    "423": {
                        "description": "Invalid email"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/authEmail": {
            "put": {
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "name": "Authorization Token",
                        "in": "header",
                        "required": "true"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "example": {
                                    "email": "email format",
                                    "code": "1111",
                                    "newsletter": "boolean"
                                }
                            }
                        }
                    }
                },
                "summary": "Auth Email",
                "responses": {
                    "200": {
                        "description": "Succ"
                    },
                    "400": {
                        "description": "Invalid Code !"
                    },
                    "404": {
                        "description": "There is no Code for this email"
                    },
                    "405": {
                        "description": "Code has Used before!"
                    },
                    "422": {
                        "description": "Code Has Expired !"
                    },
                    "423": {
                        "description": "Invalid email"
                    },
                    "465": {
                        "description": "newsletter required"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/changeNumber": {
            "post": {
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "name": "Authorization Token",
                        "in": "header",
                        "required": "true"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "example": {
                                    "phone": "phone number"
                                }
                            }
                        }
                    }
                },
                "summary": "Send Code To PhoneNumber",
                "responses": {
                    "200": {
                        "description": "Succ"
                    },
                    "406": {
                        "description": "phone have to be a number"
                    },
                    "422": {
                        "description": "phoneNumber is Required"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/authNumber": {
            "put": {
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "name": "Authorization Token",
                        "in": "header",
                        "required": "true"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "example": {
                                    "phone": "phone number",
                                    "code": "1111"
                                }
                            }
                        }
                    }
                },
                "summary": "Auth Number",
                "responses": {
                    "200": {
                        "description": "Succ"
                    },
                    "400": {
                        "description": "Invalid Code !"
                    },
                    "404": {
                        "description": "There is no Code for this number"
                    },
                    "405": {
                        "description": "Code has Used before!"
                    },
                    "422": {
                        "description": "Code Has Expired !"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/wishes/{villaID}": {
            "post": {
                "tags": [
                    "Utils"
                ],
                "parameters": [
                    {
                        "name": "Authorization Token",
                        "in": "header",
                        "required": "true"
                    },
                    {
                        "name": "villaID",
                        "in": "path",
                        "required": "true"
                    }
                ],
                "summary": "Add/Remove Villa to/from Favorite",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "example": {
                                    "flag": "true (add to favorite), false (remove from favorite)"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Succ"
                    },
                    "400": {
                        "description": "Invalid Object Id"
                    },
                    "404": {
                        "description": "Villa not found 404 !"
                    },
                    "421": {
                        "description": "this villa is already in your wish list"
                    },
                    "422": {
                        "description": "nothing found in wish list"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/wishes": {
            "get": {
                "tags": [
                    "Utils"
                ],
                "parameters": [
                    {
                        "name": "Authorization Token",
                        "in": "header",
                        "required": "true"
                    }
                ],
                "summary": "Get Villa From Favorite",
                "responses": {
                    "200": {
                        "description": "Succ"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/comment/create": {
            "post": {
                "tags": [
                    "Comments"
                ],
                "parameters": [
                    {
                        "name": "Authorization Token",
                        "in": "header",
                        "required": "true"
                    }
                ],
                "summary": "Add Comment",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "example": {
                                    "body": "Comment Body",
                                    "score": "[1,2,3,4,5]",
                                    "villa": "Villa ObjectId"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Succ"
                    },
                    "400": {
                        "description": "Invalid Object Id"
                    },
                    "404": {
                        "description": "Villa not found 404 !"
                    },
                    "409": {
                        "description": "Validator Error"
                    },
                    "425": {
                        "description": "You cannot register a comment for your own villa"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/comment/accept/{commentID}": {
            "put": {
                "tags": [
                    "Only Admin Access"
                ],
                "parameters": [
                    {
                        "name": "Authorization Token",
                        "in": "header",
                        "required": "true"
                    },
                    {
                        "name": "commentID",
                        "in": "path",
                        "required": "true"
                    }
                ],
                "summary": "Accept Comment",
                "responses": {
                    "200": {
                        "description": "Succ"
                    },
                    "422": {
                        "description": "Invalid Object Id"
                    },
                    "404": {
                        "description": "Comment not found 404 !"
                    },
                    "421": {
                        "description": "Comment is Already Accepted !"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/comment/reject/{commentID}": {
            "put": {
                "tags": [
                    "Only Admin Access"
                ],
                "parameters": [
                    {
                        "name": "Authorization Token",
                        "in": "header",
                        "required": "true"
                    },
                    {
                        "name": "commentID",
                        "in": "path",
                        "required": "true"
                    }
                ],
                "summary": "Reject Comment",
                "responses": {
                    "200": {
                        "description": "Succ"
                    },
                    "422": {
                        "description": "Invalid Object Id"
                    },
                    "404": {
                        "description": "Comment not found 404 !"
                    },
                    "421": {
                        "description": "Comment is Already Rejected !"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/comment/delete/{commentID}": {
            "delete": {
                "tags": [
                    "Comments"
                ],
                "parameters": [
                    {
                        "name": "Authorization Token",
                        "in": "header",
                        "required": "true"
                    },
                    {
                        "name": "commentID",
                        "in": "path",
                        "required": "true"
                    }
                ],
                "summary": "Delete Comment",
                "responses": {
                    "200": {
                        "description": "Succ"
                    },
                    "422": {
                        "description": "Invalid Object Id"
                    },
                    "404": {
                        "description": "Comment not found 404 !"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/comment/answer/{mainCommentID}": {
            "post": {
                "tags": [
                    "Comments"
                ],
                "parameters": [
                    {
                        "name": "Authorization Token",
                        "in": "header",
                        "required": "true"
                    },
                    {
                        "name": "mainCommentID",
                        "in": "path",
                        "required": "true"
                    }
                ],
                "summary": "Answer Comment",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "example": {
                                    "body": "Comment Body"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Succ"
                    },
                    "422": {
                        "description": "Invalid Object Id"
                    },
                    "424": {
                        "description": "The comment has not been accepted yet"
                    },
                    "421": {
                        "description": "this is an answer you cant reply answers"
                    },
                    "423": {
                        "description": "this comment already have a answer"
                    },
                    "425": {
                        "description": "you are not the author of this comment"
                    },
                    "404": {
                        "description": "Comment not found 404 !"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/comment/getAll": {
            "get": {
                "tags": [
                    "Only Admin Access"
                ],
                "summary": "GetAll Comments",
                "responses": {
                    "200": {
                        "description": "Succ"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/comment/getAllRejectedComments": {
            "get": {
                "tags": [
                    "Only Admin Access"
                ],
                "summary": "GetAll Rejected Comments",
                "responses": {
                    "200": {
                        "description": "Succ"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/villa/getAllRejectedVillas": {
            "get": {
                "tags": [
                    "Only Admin Access"
                ],
                "summary": "GetAll Rejected Villas",
                "responses": {
                    "200": {
                        "description": "Succ"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/villa/cancelReservation/{villaID}": {
            "delete": {
                "tags": [
                    "Villas"
                ],
                "parameters": [
                    {
                        "name": "Authorization Token",
                        "in": "header",
                        "required": "true"
                    },
                    {
                        "name": "villaID",
                        "in": "path",
                        "required": "true"
                    }
                ],
                "summary": "Cancel Villa Reservation",
                "responses": {
                    "200": {
                        "description": "Reservation has been successfully canceled"
                    },
                    "403": {
                        "description": "You do not have an active reservation for this villa, so you cannot cancel it"
                    },
                    "400": {
                        "description": "Invalid ObjectId"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    }
}